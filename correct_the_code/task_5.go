package main

import "sync"

// Задача: исправить код и пояснить
// объяснение ошибок находится под программой

type Data struct{
	sync.Mutex
	values []int
}

func (d *Data) Add(value int){
	d.Lock()
	defer d.Unlock()

	d.values = append(d.values, value)
}

func main(){
	data := Data{}
	data.Add(100)
}





/*
Ошибка 1: при создании объекта структуры data копируется мьютекст, что может
привести к непредсказуемым результатам, так как мьютексы будут отличаться.
Решение: нужно создавать объекты с использованием ссылки на структуру.

Ошибка 2: в структуре data мьютекст публичный, а значит если его вызвать из вне,
то это может привести к блокировке программы.
Решение: нужно сделать мьютекст приватным.

ПОТЕНЦИАЛЬНАЯ ОШИБКА: в данном коде это не является проблемой, так как есть
только одна функция которая работает со слайсом, и она записывающая. Если бы
у нас была функция читателя, то возможна ошибка со слайсом в который ничего не записано,
то есть он равен nil
*/
